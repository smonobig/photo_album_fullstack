{"ast":null,"code":"import { focusSafely as $3ad3f6e1647bc98d$export$80f3e147d781571c } from \"./focusSafely.module.js\";\nimport { useFocus as $a1ea59d68270f0dd$export$f8168d8dd8fd66e6 } from \"./useFocus.module.js\";\nimport { useKeyboard as $46d819fcbaf35654$export$8f71654801c2f7cd } from \"./useKeyboard.module.js\";\nimport { useSyncRef as $fcPuG$useSyncRef, useObjectRef as $fcPuG$useObjectRef, mergeProps as $fcPuG$mergeProps, getOwnerWindow as $fcPuG$getOwnerWindow, isFocusable as $fcPuG$isFocusable, mergeRefs as $fcPuG$mergeRefs } from \"@react-aria/utils\";\nimport $fcPuG$react, { useContext as $fcPuG$useContext, useRef as $fcPuG$useRef, useEffect as $fcPuG$useEffect, forwardRef as $fcPuG$forwardRef } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet $f645667febf57a63$export$f9762fab77588ecb = /*#__PURE__*/(0, $fcPuG$react).createContext(null);\nfunction $f645667febf57a63$var$useFocusableContext(ref) {\n  let context = (0, $fcPuG$useContext)($f645667febf57a63$export$f9762fab77588ecb) || {};\n  (0, $fcPuG$useSyncRef)(context, ref);\n  // eslint-disable-next-line\n  let {\n    ref: _,\n    ...otherProps\n  } = context;\n  return otherProps;\n}\nconst $f645667febf57a63$export$13f3202a3e5ddd5 = /*#__PURE__*/(0, $fcPuG$react).forwardRef(function FocusableProvider(props, ref) {\n  let {\n    children: children,\n    ...otherProps\n  } = props;\n  let objRef = (0, $fcPuG$useObjectRef)(ref);\n  let context = {\n    ...otherProps,\n    ref: objRef\n  };\n  return /*#__PURE__*/(0, $fcPuG$react).createElement($f645667febf57a63$export$f9762fab77588ecb.Provider, {\n    value: context\n  }, children);\n});\nfunction $f645667febf57a63$export$4c014de7c8940b4c(props, domRef) {\n  let {\n    focusProps: focusProps\n  } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)(props);\n  let {\n    keyboardProps: keyboardProps\n  } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)(props);\n  let interactions = (0, $fcPuG$mergeProps)(focusProps, keyboardProps);\n  let domProps = $f645667febf57a63$var$useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n  let autoFocusRef = (0, $fcPuG$useRef)(props.autoFocus);\n  (0, $fcPuG$useEffect)(() => {\n    if (autoFocusRef.current && domRef.current) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(domRef.current);\n    autoFocusRef.current = false;\n  }, [domRef]);\n  // Always set a tabIndex so that Safari allows focusing native buttons and inputs.\n  let tabIndex = props.excludeFromTabOrder ? -1 : 0;\n  if (props.isDisabled) tabIndex = undefined;\n  return {\n    focusableProps: (0, $fcPuG$mergeProps)({\n      ...interactions,\n      tabIndex: tabIndex\n    }, interactionProps)\n  };\n}\nconst $f645667febf57a63$export$35a3bebf7ef2d934 = /*#__PURE__*/(0, $fcPuG$forwardRef)(({\n  children: children,\n  ...props\n}, ref) => {\n  ref = (0, $fcPuG$useObjectRef)(ref);\n  let {\n    focusableProps: focusableProps\n  } = $f645667febf57a63$export$4c014de7c8940b4c(props, ref);\n  let child = (0, $fcPuG$react).Children.only(children);\n  (0, $fcPuG$useEffect)(() => {\n    if (process.env.NODE_ENV === 'production') return;\n    let el = ref.current;\n    if (!el || !(el instanceof (0, $fcPuG$getOwnerWindow)(el).Element)) {\n      console.error('<Focusable> child must forward its ref to a DOM element.');\n      return;\n    }\n    if (!props.isDisabled && !(0, $fcPuG$isFocusable)(el)) {\n      console.warn('<Focusable> child must be focusable. Please ensure the tabIndex prop is passed through.');\n      return;\n    }\n    if (el.localName !== 'button' && el.localName !== 'input' && el.localName !== 'select' && el.localName !== 'textarea' && el.localName !== 'a' && el.localName !== 'area' && el.localName !== 'summary' && el.localName !== 'img' && el.localName !== 'svg') {\n      let role = el.getAttribute('role');\n      if (!role) console.warn('<Focusable> child must have an interactive ARIA role.');else if (\n      // https://w3c.github.io/aria/#widget_roles\n      role !== 'application' && role !== 'button' && role !== 'checkbox' && role !== 'combobox' && role !== 'gridcell' && role !== 'link' && role !== 'menuitem' && role !== 'menuitemcheckbox' && role !== 'menuitemradio' && role !== 'option' && role !== 'radio' && role !== 'searchbox' && role !== 'separator' && role !== 'slider' && role !== 'spinbutton' && role !== 'switch' && role !== 'tab' && role !== 'tabpanel' && role !== 'textbox' && role !== 'treeitem' &&\n      // aria-describedby is also announced on these roles\n      role !== 'img' && role !== 'meter' && role !== 'progressbar') console.warn(`<Focusable> child must have an interactive ARIA role. Got \"${role}\".`);\n    }\n  }, [ref, props.isDisabled]);\n  // @ts-ignore\n  let childRef = parseInt((0, $fcPuG$react).version, 10) < 19 ? child.ref : child.props.ref;\n  return /*#__PURE__*/(0, $fcPuG$react).cloneElement(child, {\n    ...(0, $fcPuG$mergeProps)(focusableProps, child.props),\n    // @ts-ignore\n    ref: (0, $fcPuG$mergeRefs)(childRef, ref)\n  });\n});\nexport { $f645667febf57a63$export$f9762fab77588ecb as FocusableContext, $f645667febf57a63$export$13f3202a3e5ddd5 as FocusableProvider, $f645667febf57a63$export$4c014de7c8940b4c as useFocusable, $f645667febf57a63$export$35a3bebf7ef2d934 as Focusable };","map":{"version":3,"sources":["packages/@react-aria/interactions/src/useFocusable.tsx"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;AAUC;;AAyBM,IAAI,yCAAA,GAAA,aAAmB,CAAA,CAAA,EAAA,YAAI,EAAE,aAAa,CAA+B,IAAA,CAAA;AAEhF,SAAS,yCAAA,CAAoB,GAAuC,EAAA;EAClE,IAAI,OAAA,GAAU,CAAA,CAAA,EAAA,iBAAS,EAAE,yCAAA,CAAA,IAAqB,CAAC,CAAA;EAC/C,CAAA,CAAA,EAAA,iBAAS,EAAE,OAAA,EAAS,GAAA,CAAA;EAEpB;EACA,IAAI;IAAC,GAAA,EAAK,CAAC;IAAE,GAAG;EAAA,CAAW,GAAG,OAAA;EAC9B,OAAO,UAAA;AACT;AAKO,MAAM,wCAAA,GAAA,aAAoB,CAAA,CAAA,EAAA,YAAI,EAAE,UAAU,CAAC,SAAS,iBAAA,CAAkB,KAA6B,EAAE,GAAmC,EAAA;EAC7I,IAAI;IAAA,QAAA,EAAC,QAAQ;IAAE,GAAG;EAAA,CAAW,GAAG,KAAA;EAChC,IAAI,MAAA,GAAS,CAAA,CAAA,EAAA,mBAAW,EAAE,GAAA,CAAA;EAC1B,IAAI,OAAA,GAAU;IACZ,GAAG,UAAU;IACb,GAAA,EAAK;EACP,CAAA;EAEA,OAAA,aACE,CAAA,CAAA,EAAA,YAAA,EAAA,aAAA,CAAC,yCAAA,CAAiB,QAAQ,EAAA;IAAC,KAAA,EAAO;KAC/B,QAAA,CAAA;AAGP,CAAA,CAAA;AAUO,SAAS,yCAAA,CAA4D,KAA0B,EAAE,MAA0C,EAAA;EAChJ,IAAI;IAAA,UAAA,EAAC;EAAU,CAAC,GAAG,CAAA,CAAA,EAAA,yCAAO,EAAE,KAAA,CAAA;EAC5B,IAAI;IAAA,aAAA,EAAC;EAAa,CAAC,GAAG,CAAA,CAAA,EAAA,yCAAU,EAAE,KAAA,CAAA;EAClC,IAAI,YAAA,GAAe,CAAA,CAAA,EAAA,iBAAS,EAAE,UAAA,EAAY,aAAA,CAAA;EAC1C,IAAI,QAAA,GAAW,yCAAA,CAAoB,MAAA,CAAA;EACnC,IAAI,gBAAA,GAAmB,KAAA,CAAM,UAAU,GAAG,CAAC,CAAA,GAAI,QAAA;EAC/C,IAAI,YAAA,GAAe,CAAA,CAAA,EAAA,aAAK,EAAE,KAAA,CAAM,SAAS,CAAA;EAEzC,CAAA,CAAA,EAAA,gBAAQ,EAAE,MAAA;IACR,IAAI,YAAA,CAAa,OAAO,IAAI,MAAA,CAAO,OAAO,EACxC,CAAA,CAAA,EAAA,yCAAU,EAAE,MAAA,CAAO,OAAO,CAAA;IAE5B,YAAA,CAAa,OAAO,GAAG,KAAA;EACzB,CAAA,EAAG,CAAC,MAAA,CAAO,CAAA;EAEX;EACA,IAAI,QAAA,GAA+B,KAAA,CAAM,mBAAmB,GAAG,CAAA,CAAA,GAAK,CAAA;EACpE,IAAI,KAAA,CAAM,UAAU,EAClB,QAAA,GAAW,SAAA;EAGb,OAAO;IACL,cAAA,EAAgB,CAAA,CAAA,EAAA,iBAAS,EACvB;MACE,GAAG,YAAY;gBACf;IACF,CAAA,EACA,gBAAA;EAEJ,CAAA;AACF;AAMO,MAAM,yCAAA,GAAA,aAAY,CAAA,CAAA,EAAA,iBAAS,EAAE,CAAC;EAAA,QAAA,EAAC,QAAQ;EAAE,GAAG;AAAA,CAA+B,EAAE,GAAA,KAAA;EAClF,GAAA,GAAM,CAAA,CAAA,EAAA,mBAAW,EAAE,GAAA,CAAA;EACnB,IAAI;IAAA,cAAA,EAAC;EAAc,CAAC,GAAG,yCAAA,CAAa,KAAA,EAAO,GAAA,CAAA;EAC3C,IAAI,KAAA,GAAQ,CAAA,CAAA,EAAA,YAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAA,CAAA;EAEhC,CAAA,CAAA,EAAA,gBAAQ,EAAE,MAAA;IACR,IAAI,OAAA,CAAQ,GAAG,CAAC,QAAQ,KAAK,YAAA,EAC3B;IAGF,IAAI,EAAA,GAAK,GAAA,CAAI,OAAO;IACpB,IAAI,CAAC,EAAA,IAAM,EAAE,EAAA,YAAc,CAAA,CAAA,EAAA,qBAAa,EAAE,EAAA,CAAA,CAAI,OAAO,CAAA,EAAG;MACtD,OAAA,CAAQ,KAAK,CAAC,0DAAA,CAAA;MACd;IACF;IAEA,IAAI,CAAC,KAAA,CAAM,UAAU,IAAI,CAAC,CAAA,CAAA,EAAA,kBAAU,EAAE,EAAA,CAAA,EAAK;MACzC,OAAA,CAAQ,IAAI,CAAC,yFAAA,CAAA;MACb;IACF;IAEA,IACE,EAAA,CAAG,SAAS,KAAK,QAAA,IACjB,EAAA,CAAG,SAAS,KAAK,OAAA,IACjB,EAAA,CAAG,SAAS,KAAK,QAAA,IACjB,EAAA,CAAG,SAAS,KAAK,UAAA,IACjB,EAAA,CAAG,SAAS,KAAK,GAAA,IACjB,EAAA,CAAG,SAAS,KAAK,MAAA,IACjB,EAAA,CAAG,SAAS,KAAK,SAAA,IACjB,EAAA,CAAG,SAAS,KAAK,KAAA,IACjB,EAAA,CAAG,SAAS,KAAK,KAAA,EACjB;MACA,IAAI,IAAA,GAAO,EAAA,CAAG,YAAY,CAAC,MAAA,CAAA;MAC3B,IAAI,CAAC,IAAA,EACH,OAAA,CAAQ,IAAI,CAAC,uDAAA,CAAA,CAAA,KACR;MACL;MACA,IAAA,KAAS,aAAA,IACT,IAAA,KAAS,QAAA,IACT,IAAA,KAAS,UAAA,IACT,IAAA,KAAS,UAAA,IACT,IAAA,KAAS,UAAA,IACT,IAAA,KAAS,MAAA,IACT,IAAA,KAAS,UAAA,IACT,IAAA,KAAS,kBAAA,IACT,IAAA,KAAS,eAAA,IACT,IAAA,KAAS,QAAA,IACT,IAAA,KAAS,OAAA,IACT,IAAA,KAAS,WAAA,IACT,IAAA,KAAS,WAAA,IACT,IAAA,KAAS,QAAA,IACT,IAAA,KAAS,YAAA,IACT,IAAA,KAAS,QAAA,IACT,IAAA,KAAS,KAAA,IACT,IAAA,KAAS,UAAA,IACT,IAAA,KAAS,SAAA,IACT,IAAA,KAAS,UAAA;MACT;MACA,IAAA,KAAS,KAAA,IACT,IAAA,KAAS,OAAA,IACT,IAAA,KAAS,aAAA,EAET,OAAA,CAAQ,IAAI,CAAC,8DAA8D,IAAA,IAAQ,CAAA;IAEvF;EACF,CAAA,EAAG,CAAC,GAAA,EAAK,KAAA,CAAM,UAAU,CAAC,CAAA;EAE1B;EACA,IAAI,QAAA,GAAW,QAAA,CAAS,CAAA,CAAA,EAAA,YAAI,EAAE,OAAO,EAAE,EAAA,CAAA,GAAM,EAAA,GAAK,KAAA,CAAM,GAAG,GAAG,KAAA,CAAM,KAAK,CAAC,GAAG;EAE7E,OAAA,aAAO,CAAA,CAAA,EAAA,YAAI,EAAE,YAAY,CACvB,KAAA,EACA;IACE,GAAG,CAAA,CAAA,EAAA,iBAAS,EAAE,cAAA,EAAgB,KAAA,CAAM,KAAK,CAAC;IAC1C;IACA,GAAA,EAAK,CAAA,CAAA,EAAA,gBAAQ,EAAE,QAAA,EAAU,GAAA;EAC3B,CAAA,CAAA;AAEJ,CAAA,CAAA","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableDOMProps, FocusableElement, FocusableProps, RefObject} from '@react-types/shared';\nimport {focusSafely} from './';\nimport {getOwnerWindow, isFocusable, mergeProps, mergeRefs, useObjectRef, useSyncRef} from '@react-aria/utils';\nimport React, {ForwardedRef, forwardRef, MutableRefObject, ReactElement, ReactNode, useContext, useEffect, useRef} from 'react';\nimport {useFocus} from './useFocus';\nimport {useKeyboard} from './useKeyboard';\n\nexport interface FocusableOptions<T = FocusableElement> extends FocusableProps<T>, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusableProviderProps extends DOMAttributes {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<FocusableElement | null>\n}\n\n// Exported for @react-aria/collections, which forwards this context.\n/** @private */\nexport let FocusableContext = React.createContext<FocusableContextValue | null>(null);\n\nfunction useFocusableContext(ref: RefObject<FocusableElement | null>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  // eslint-disable-next-line\n  let {ref: _, ...otherProps} = context;\n  return otherProps;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nexport const FocusableProvider = React.forwardRef(function FocusableProvider(props: FocusableProviderProps, ref: ForwardedRef<FocusableElement>) {\n  let {children, ...otherProps} = props;\n  let objRef = useObjectRef(ref);\n  let context = {\n    ...otherProps,\n    ref: objRef\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n});\n\nexport interface FocusableAria {\n  /** Props for the focusable element. */\n  focusableProps: DOMAttributes\n}\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable<T extends FocusableElement = FocusableElement>(props: FocusableOptions<T>, domRef: RefObject<FocusableElement | null>): FocusableAria {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n  let autoFocusRef = useRef(props.autoFocus);\n\n  useEffect(() => {\n    if (autoFocusRef.current && domRef.current) {\n      focusSafely(domRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [domRef]);\n\n  // Always set a tabIndex so that Safari allows focusing native buttons and inputs.\n  let tabIndex: number | undefined = props.excludeFromTabOrder ? -1 : 0;\n  if (props.isDisabled) {\n    tabIndex = undefined;\n  }\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex\n      },\n      interactionProps\n    )\n  };\n}\n\nexport interface FocusableComponentProps extends FocusableOptions {\n  children: ReactElement<DOMAttributes, string>\n}\n\nexport const Focusable = forwardRef(({children, ...props}: FocusableComponentProps, ref: ForwardedRef<FocusableElement>) => {\n  ref = useObjectRef(ref);\n  let {focusableProps} = useFocusable(props, ref);\n  let child = React.Children.only(children);\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n\n    let el = ref.current;\n    if (!el || !(el instanceof getOwnerWindow(el).Element)) {\n      console.error('<Focusable> child must forward its ref to a DOM element.');\n      return;\n    }\n\n    if (!props.isDisabled && !isFocusable(el)) {\n      console.warn('<Focusable> child must be focusable. Please ensure the tabIndex prop is passed through.');\n      return;\n    }\n\n    if (\n      el.localName !== 'button' &&\n      el.localName !== 'input' &&\n      el.localName !== 'select' &&\n      el.localName !== 'textarea' &&\n      el.localName !== 'a' &&\n      el.localName !== 'area' &&\n      el.localName !== 'summary' &&\n      el.localName !== 'img' &&\n      el.localName !== 'svg'\n    ) {\n      let role = el.getAttribute('role');\n      if (!role) {\n        console.warn('<Focusable> child must have an interactive ARIA role.');\n      } else if (\n        // https://w3c.github.io/aria/#widget_roles\n        role !== 'application' &&\n        role !== 'button' &&\n        role !== 'checkbox' &&\n        role !== 'combobox' &&\n        role !== 'gridcell' &&\n        role !== 'link' &&\n        role !== 'menuitem' &&\n        role !== 'menuitemcheckbox' &&\n        role !== 'menuitemradio' &&\n        role !== 'option' &&\n        role !== 'radio' &&\n        role !== 'searchbox' &&\n        role !== 'separator' &&\n        role !== 'slider' &&\n        role !== 'spinbutton' &&\n        role !== 'switch' &&\n        role !== 'tab' &&\n        role !== 'tabpanel' &&\n        role !== 'textbox' &&\n        role !== 'treeitem' &&\n        // aria-describedby is also announced on these roles\n        role !== 'img' &&\n        role !== 'meter' &&\n        role !== 'progressbar'\n      ) {\n        console.warn(`<Focusable> child must have an interactive ARIA role. Got \"${role}\".`);\n      }\n    }\n  }, [ref, props.isDisabled]);\n\n  // @ts-ignore\n  let childRef = parseInt(React.version, 10) < 19 ? child.ref : child.props.ref;\n\n  return React.cloneElement(\n    child,\n    {\n      ...mergeProps(focusableProps, child.props),\n      // @ts-ignore\n      ref: mergeRefs(childRef, ref)\n    }\n  );\n});\n"]},"metadata":{},"sourceType":"module"}