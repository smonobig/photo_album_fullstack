{"ast":null,"code":"import { useEffectEvent as $8ae05eaa5c114e9c$export$7f54fc3180508a52 } from \"./useEffectEvent.module.js\";\nimport { useEffect as $ceQd6$useEffect } from \"react\";\n\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $e9faafb641e167db$export$90fc3a17d93f704c(ref, event, handler, options) {\n  let handleEvent = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(handler);\n  let isDisabled = handler == null;\n  (0, $ceQd6$useEffect)(() => {\n    if (isDisabled || !ref.current) return;\n    let element = ref.current;\n    element.addEventListener(event, handleEvent, options);\n    return () => {\n      element.removeEventListener(event, handleEvent, options);\n    };\n  }, [ref, event, options, isDisabled, handleEvent]);\n}\nexport { $e9faafb641e167db$export$90fc3a17d93f704c as useEvent };","map":{"version":3,"sources":["packages/@react-aria/utils/src/useEvent.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;AAUC;;AAMM,SAAS,yCAAA,CACd,GAAkC,EAClC,KAAwB,EACxB,OAAqE,EACrE,OAA2C,EAAA;EAE3C,IAAI,WAAA,GAAc,CAAA,CAAA,EAAA,yCAAa,EAAE,OAAA,CAAA;EACjC,IAAI,UAAA,GAAa,OAAA,IAAW,IAAA;EAE5B,CAAA,CAAA,EAAA,gBAAQ,EAAE,MAAA;IACR,IAAI,UAAA,IAAc,CAAC,GAAA,CAAI,OAAO,EAC5B;IAGF,IAAI,OAAA,GAAU,GAAA,CAAI,OAAO;IACzB,OAAA,CAAQ,gBAAgB,CAAC,KAAA,EAAO,WAAA,EAA8B,OAAA,CAAA;IAC9D,OAAO,MAAA;MACL,OAAA,CAAQ,mBAAmB,CAAC,KAAA,EAAO,WAAA,EAA8B,OAAA,CAAA;IACnE,CAAA;EACF,CAAA,EAAG,CAAC,GAAA,EAAK,KAAA,EAAO,OAAA,EAAS,UAAA,EAAY,WAAA,CAAY,CAAA;AACnD","sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject} from '@react-types/shared';\nimport {useEffect} from 'react';\nimport {useEffectEvent} from './useEffectEvent';\n\nexport function useEvent<K extends keyof GlobalEventHandlersEventMap>(\n  ref: RefObject<EventTarget | null>,\n  event: K | (string & {}),\n  handler?: (this: Document, ev: GlobalEventHandlersEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions\n): void {\n  let handleEvent = useEffectEvent(handler);\n  let isDisabled = handler == null;\n\n  useEffect(() => {\n    if (isDisabled || !ref.current) {\n      return;\n    }\n\n    let element = ref.current;\n    element.addEventListener(event, handleEvent as EventListener, options);\n    return () => {\n      element.removeEventListener(event, handleEvent as EventListener, options);\n    };\n  }, [ref, event, options, isDisabled, handleEvent]);\n}\n"]},"metadata":{},"sourceType":"module"}