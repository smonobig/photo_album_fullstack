{"ast":null,"code":"import { useLayoutEffect as $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c } from \"./useLayoutEffect.module.js\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref) {\n  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {\n    if (context && context.ref && ref) {\n      context.ref.current = ref.current;\n      return () => {\n        if (context.ref) context.ref.current = null;\n      };\n    }\n  });\n}\nexport { $e7801be82b4b2a53$export$4debdb1a3f0fa79e as useSyncRef };","map":{"version":3,"sources":["packages/@react-aria/utils/src/useSyncRef.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;AAUC;AAWM,SAAS,yCAAA,CAAc,OAAgC,EAAE,GAAyB,EAAA;EACvF,CAAA,CAAA,EAAA,yCAAc,EAAE,MAAA;IACd,IAAI,OAAA,IAAW,OAAA,CAAQ,GAAG,IAAI,GAAA,EAAK;MACjC,OAAA,CAAQ,GAAG,CAAC,OAAO,GAAG,GAAA,CAAI,OAAO;MACjC,OAAO,MAAA;QACL,IAAI,OAAA,CAAQ,GAAG,EACb,OAAA,CAAQ,GAAG,CAAC,OAAO,GAAG,IAAA;MAE1B,CAAA;IACF;EACF,CAAA,CAAA;AACF","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {MutableRefObject} from 'react';\nimport {RefObject} from '@react-types/shared';\nimport {useLayoutEffect} from './';\n\ninterface ContextValue<T> {\n  ref?: MutableRefObject<T | null>\n}\n\n// Syncs ref from context with ref passed to hook\nexport function useSyncRef<T>(context?: ContextValue<T> | null, ref?: RefObject<T | null>): void {\n  useLayoutEffect(() => {\n    if (context && context.ref && ref) {\n      context.ref.current = ref.current;\n      return () => {\n        if (context.ref) {\n          context.ref.current = null;\n        }\n      };\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}