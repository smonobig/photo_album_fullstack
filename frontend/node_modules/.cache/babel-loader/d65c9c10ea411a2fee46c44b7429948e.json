{"ast":null,"code":"const $431fbd86ca7dc216$export$b204af158042fbac = el => {\n  var _el_ownerDocument;\n  return (_el_ownerDocument = el === null || el === void 0 ? void 0 : el.ownerDocument) !== null && _el_ownerDocument !== void 0 ? _el_ownerDocument : document;\n};\nconst $431fbd86ca7dc216$export$f21a1ffae260145a = el => {\n  if (el && 'window' in el && el.window === el) return el;\n  const doc = $431fbd86ca7dc216$export$b204af158042fbac(el);\n  return doc.defaultView || window;\n};\n/**\n * Type guard that checks if a value is a Node. Verifies the presence and type of the nodeType property.\n */\nfunction $431fbd86ca7dc216$var$isNode(value) {\n  return value !== null && typeof value === 'object' && 'nodeType' in value && typeof value.nodeType === 'number';\n}\nfunction $431fbd86ca7dc216$export$af51f0f06c0f328a(node) {\n  return $431fbd86ca7dc216$var$isNode(node) && node.nodeType === Node.DOCUMENT_FRAGMENT_NODE && 'host' in node;\n}\nexport { $431fbd86ca7dc216$export$b204af158042fbac as getOwnerDocument, $431fbd86ca7dc216$export$f21a1ffae260145a as getOwnerWindow, $431fbd86ca7dc216$export$af51f0f06c0f328a as isShadowRoot };","map":{"version":3,"sources":["packages/@react-aria/utils/src/domHelpers.ts"],"names":[],"mappings":"AAAO,MAAM,yCAAA,GAAoB,EAAA,IAAA;MACxB,iBAAA;EAAP,OAAO,CAAA,iBAAA,GAAA,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAI,aAAa,MAAA,IAAA,IAAjB,iBAAA,KAAA,KAAA,CAAA,GAAA,iBAAA,GAAqB,QAAA;AAC9B,CAAA;AAEO,MAAM,yCAAA,GACX,EAAA,IAAA;EAEA,IAAI,EAAA,IAAM,QAAA,IAAY,EAAA,IAAM,EAAA,CAAG,MAAM,KAAK,EAAA,EACxC,OAAO,EAAA;EAGT,MAAM,GAAA,GAAM,yCAAA,CAAiB,EAAA,CAAA;EAC7B,OAAO,GAAA,CAAI,WAAW,IAAI,MAAA;AAC5B,CAAA;AAEA;;AAEC;AACD,SAAS,4BAAA,CAAO,KAAc,EAAA;EAC5B,OAAO,KAAA,KAAU,IAAA,IACf,OAAO,KAAA,KAAU,QAAA,IACjB,UAAA,IAAc,KAAA,IACd,OAAQ,KAAA,CAAe,QAAQ,KAAK,QAAA;AACxC;AAKO,SAAS,yCAAA,CAAa,IAAiB,EAAA;EAC5C,OAAO,4BAAA,CAAO,IAAA,CAAA,IACZ,IAAA,CAAK,QAAQ,KAAK,IAAA,CAAK,sBAAsB,IAC7C,MAAA,IAAU,IAAA;AACd","sourcesContent":["export const getOwnerDocument = (el: Element | null | undefined): Document => {\n  return el?.ownerDocument ?? document;\n};\n\nexport const getOwnerWindow = (\n  el: (Window & typeof global) | Element | null | undefined\n): Window & typeof global => {\n  if (el && 'window' in el && el.window === el) {\n    return el;\n  }\n\n  const doc = getOwnerDocument(el as Element | null | undefined);\n  return doc.defaultView || window;\n};\n\n/**\n * Type guard that checks if a value is a Node. Verifies the presence and type of the nodeType property.\n */\nfunction isNode(value: unknown): value is Node {\n  return value !== null &&\n    typeof value === 'object' &&\n    'nodeType' in value &&\n    typeof (value as Node).nodeType === 'number';\n}\n/**\n * Type guard that checks if a node is a ShadowRoot. Uses nodeType and host property checks to\n * distinguish ShadowRoot from other DocumentFragments.\n */\nexport function isShadowRoot(node: Node | null): node is ShadowRoot {\n  return isNode(node) &&\n    node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n    'host' in node;\n}\n"]},"metadata":{},"sourceType":"module"}