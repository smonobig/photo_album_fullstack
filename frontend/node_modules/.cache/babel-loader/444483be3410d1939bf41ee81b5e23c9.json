{"ast":null,"code":"import { useEffectEvent as $8ae05eaa5c114e9c$export$7f54fc3180508a52 } from \"./useEffectEvent.module.js\";\nimport { useRef as $8rM3G$useRef, useEffect as $8rM3G$useEffect } from \"react\";\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $99facab73266f662$export$5add1d006293d136(ref, initialValue, onReset) {\n  let resetValue = (0, $8rM3G$useRef)(initialValue);\n  let handleReset = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {\n    if (onReset) onReset(resetValue.current);\n  });\n  (0, $8rM3G$useEffect)(() => {\n    var _ref_current;\n    let form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;\n    form === null || form === void 0 ? void 0 : form.addEventListener('reset', handleReset);\n    return () => {\n      form === null || form === void 0 ? void 0 : form.removeEventListener('reset', handleReset);\n    };\n  }, [ref, handleReset]);\n}\nexport { $99facab73266f662$export$5add1d006293d136 as useFormReset };","map":{"version":3,"sources":["packages/@react-aria/utils/src/useFormReset.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;AAUC;;AAMM,SAAS,yCAAA,CACd,GAA6F,EAC7F,YAAe,EACf,OAA2B,EAAA;EAE3B,IAAI,UAAA,GAAa,CAAA,CAAA,EAAA,aAAK,EAAE,YAAA,CAAA;EACxB,IAAI,WAAA,GAAc,CAAA,CAAA,EAAA,yCAAa,EAAE,MAAA;IAC/B,IAAI,OAAA,EACF,OAAA,CAAQ,UAAA,CAAW,OAAO,CAAA;EAE9B,CAAA,CAAA;EAEA,CAAA,CAAA,EAAA,gBAAQ,EAAE,MAAA;QACG,YAAA;IAAX,IAAI,IAAA,GAAO,GAAA,KAAA,IAAA,IAAA,GAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,YAAA,GAAA,GAAA,CAAK,OAAO,MAAA,IAAA,IAAZ,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAc,IAAI;IAC7B,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAM,gBAAgB,CAAC,OAAA,EAAS,WAAA,CAAA;IAChC,OAAO,MAAA;MACL,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAM,mBAAmB,CAAC,OAAA,EAAS,WAAA,CAAA;IACrC,CAAA;EACF,CAAA,EAAG,CAAC,GAAA,EAAK,WAAA,CAAY,CAAA;AACvB","sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject} from '@react-types/shared';\nimport {useEffect, useRef} from 'react';\nimport {useEffectEvent} from './useEffectEvent';\n\nexport function useFormReset<T>(\n  ref: RefObject<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement | null> | undefined,\n  initialValue: T,\n  onReset: (value: T) => void\n): void {\n  let resetValue = useRef(initialValue);\n  let handleReset = useEffectEvent(() => {\n    if (onReset) {\n      onReset(resetValue.current);\n    }\n  });\n\n  useEffect(() => {\n    let form = ref?.current?.form;\n    form?.addEventListener('reset', handleReset);\n    return () => {\n      form?.removeEventListener('reset', handleReset);\n    };\n  }, [ref, handleReset]);\n}\n"]},"metadata":{},"sourceType":"module"}