{"ast":null,"code":"import { useEffect as $Vsl8o$useEffect } from \"react\";\nfunction $9daab02d461809db$var$hasResizeObserver() {\n  return typeof window.ResizeObserver !== 'undefined';\n}\nfunction $9daab02d461809db$export$683480f191c0e3ea(options) {\n  const {\n    ref: ref,\n    box: box,\n    onResize: onResize\n  } = options;\n  (0, $Vsl8o$useEffect)(() => {\n    let element = ref === null || ref === void 0 ? void 0 : ref.current;\n    if (!element) return;\n    if (!$9daab02d461809db$var$hasResizeObserver()) {\n      window.addEventListener('resize', onResize, false);\n      return () => {\n        window.removeEventListener('resize', onResize, false);\n      };\n    } else {\n      const resizeObserverInstance = new window.ResizeObserver(entries => {\n        if (!entries.length) return;\n        onResize();\n      });\n      resizeObserverInstance.observe(element, {\n        box: box\n      });\n      return () => {\n        if (element) resizeObserverInstance.unobserve(element);\n      };\n    }\n  }, [onResize, ref, box]);\n}\nexport { $9daab02d461809db$export$683480f191c0e3ea as useResizeObserver };","map":{"version":3,"sources":["packages/@react-aria/utils/src/useResizeObserver.ts"],"names":[],"mappings":";AAIA,SAAS,uCAAA,CAAA,EAAA;EACP,OAAO,OAAO,MAAA,CAAO,cAAc,KAAK,WAAA;AAC1C;AAQO,SAAS,yCAAA,CAAqC,OAAwC,EAAA;EAC3F,MAAM;IAAA,GAAA,EAAC,GAAG;IAAA,GAAA,EAAE,GAAG;IAAA,QAAA,EAAE;EAAQ,CAAC,GAAG,OAAA;EAE7B,CAAA,CAAA,EAAA,gBAAQ,EAAE,MAAA;IACR,IAAI,OAAA,GAAU,GAAA,KAAA,IAAA,IAAA,GAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,OAAO;IAC1B,IAAI,CAAC,OAAA,EACH;IAGF,IAAI,CAAC,uCAAA,CAAA,CAAA,EAAqB;MACxB,MAAA,CAAO,gBAAgB,CAAC,QAAA,EAAU,QAAA,EAAU,KAAA,CAAA;MAC5C,OAAO,MAAA;QACL,MAAA,CAAO,mBAAmB,CAAC,QAAA,EAAU,QAAA,EAAU,KAAA,CAAA;MACjD,CAAA;IACF,CAAA,MAAO;MAEL,MAAM,sBAAA,GAAyB,IAAI,MAAA,CAAO,cAAc,CAAE,OAAA,IAAA;QACxD,IAAI,CAAC,OAAA,CAAQ,MAAM,EACjB;QAGF,QAAA,CAAA,CAAA;MACF,CAAA,CAAA;MACA,sBAAA,CAAuB,OAAO,CAAC,OAAA,EAAS;aAAC;MAAG,CAAA,CAAA;MAE5C,OAAO,MAAA;QACL,IAAI,OAAA,EACF,sBAAA,CAAuB,SAAS,CAAC,OAAA,CAAA;MAErC,CAAA;IACF;EAEF,CAAA,EAAG,CAAC,QAAA,EAAU,GAAA,EAAK,GAAA,CAAI,CAAA;AACzB","sourcesContent":["\nimport {RefObject} from '@react-types/shared';\nimport {useEffect} from 'react';\n\nfunction hasResizeObserver() {\n  return typeof window.ResizeObserver !== 'undefined';\n}\n\ntype useResizeObserverOptionsType<T> = {\n  ref: RefObject<T | undefined | null> | undefined,\n  box?: ResizeObserverBoxOptions,\n  onResize: () => void\n}\n\nexport function useResizeObserver<T extends Element>(options: useResizeObserverOptionsType<T>): void {\n  const {ref, box, onResize} = options;\n\n  useEffect(() => {\n    let element = ref?.current;\n    if (!element) {\n      return;\n    }\n\n    if (!hasResizeObserver()) {\n      window.addEventListener('resize', onResize, false);\n      return () => {\n        window.removeEventListener('resize', onResize, false);\n      };\n    } else {\n\n      const resizeObserverInstance = new window.ResizeObserver((entries) => {\n        if (!entries.length) {\n          return;\n        }\n\n        onResize();\n      });\n      resizeObserverInstance.observe(element, {box});\n\n      return () => {\n        if (element) {\n          resizeObserverInstance.unobserve(element);\n        }\n      };\n    }\n\n  }, [onResize, ref, box]);\n}\n"]},"metadata":{},"sourceType":"module"}