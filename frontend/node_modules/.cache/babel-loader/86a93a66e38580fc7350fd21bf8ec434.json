{"ast":null,"code":"import { getOffset as $ab71dadb03a6fb2e$export$622cea445a1c5b7d } from \"./getOffset.module.js\";\nimport { useRef as $1rnCS$useRef } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /* eslint-disable rulesdir/pure-render */\n\n// Keep track of elements that we are currently handling dragging for via useDrag1D.\n// If there's an ancestor and a descendant both using useDrag1D(), and the user starts\n// dragging the descendant, we don't want useDrag1D events to fire for the ancestor.\nconst $9cc09df9fd7676be$var$draggingElements = [];\nfunction $9cc09df9fd7676be$export$7bbed75feba39706(props) {\n  console.warn('useDrag1D is deprecated, please use `useMove` instead https://react-spectrum.adobe.com/react-aria/useMove.html');\n  let {\n    containerRef: containerRef,\n    reverse: reverse,\n    orientation: orientation,\n    onHover: onHover,\n    onDrag: onDrag,\n    onPositionChange: onPositionChange,\n    onIncrement: onIncrement,\n    onDecrement: onDecrement,\n    onIncrementToMax: onIncrementToMax,\n    onDecrementToMin: onDecrementToMin,\n    onCollapseToggle: onCollapseToggle\n  } = props;\n  let getPosition = e => orientation === 'horizontal' ? e.clientX : e.clientY;\n  let getNextOffset = e => {\n    let containerOffset = (0, $ab71dadb03a6fb2e$export$622cea445a1c5b7d)(containerRef.current, reverse, orientation);\n    let mouseOffset = getPosition(e);\n    let nextOffset = reverse ? containerOffset - mouseOffset : mouseOffset - containerOffset;\n    return nextOffset;\n  };\n  let dragging = (0, $1rnCS$useRef)(false);\n  let prevPosition = (0, $1rnCS$useRef)(0);\n  // Keep track of the current handlers in a ref so that the events can access them.\n  let handlers = (0, $1rnCS$useRef)({\n    onPositionChange: onPositionChange,\n    onDrag: onDrag\n  });\n  handlers.current.onDrag = onDrag;\n  handlers.current.onPositionChange = onPositionChange;\n  let onMouseDragged = e => {\n    e.preventDefault();\n    let nextOffset = getNextOffset(e);\n    if (!dragging.current) {\n      dragging.current = true;\n      if (handlers.current.onDrag) handlers.current.onDrag(true);\n      if (handlers.current.onPositionChange) handlers.current.onPositionChange(nextOffset);\n    }\n    if (prevPosition.current === nextOffset) return;\n    prevPosition.current = nextOffset;\n    if (onPositionChange) onPositionChange(nextOffset);\n  };\n  let onMouseUp = e => {\n    const target = e.target;\n    dragging.current = false;\n    let nextOffset = getNextOffset(e);\n    if (handlers.current.onDrag) handlers.current.onDrag(false);\n    if (handlers.current.onPositionChange) handlers.current.onPositionChange(nextOffset);\n    $9cc09df9fd7676be$var$draggingElements.splice($9cc09df9fd7676be$var$draggingElements.indexOf(target), 1);\n    window.removeEventListener('mouseup', onMouseUp, false);\n    window.removeEventListener('mousemove', onMouseDragged, false);\n  };\n  let onMouseDown = e => {\n    const target = e.currentTarget;\n    // If we're already handling dragging on a descendant with useDrag1D, then\n    // we don't want to handle the drag motion on this target as well.\n    if ($9cc09df9fd7676be$var$draggingElements.some(elt => target.contains(elt))) return;\n    $9cc09df9fd7676be$var$draggingElements.push(target);\n    window.addEventListener('mousemove', onMouseDragged, false);\n    window.addEventListener('mouseup', onMouseUp, false);\n  };\n  let onMouseEnter = () => {\n    if (onHover) onHover(true);\n  };\n  let onMouseOut = () => {\n    if (onHover) onHover(false);\n  };\n  let onKeyDown = e => {\n    switch (e.key) {\n      case 'Left':\n      case 'ArrowLeft':\n        if (orientation === 'horizontal') {\n          e.preventDefault();\n          if (onDecrement && !reverse) onDecrement();else if (onIncrement && reverse) onIncrement();\n        }\n        break;\n      case 'Up':\n      case 'ArrowUp':\n        if (orientation === 'vertical') {\n          e.preventDefault();\n          if (onDecrement && !reverse) onDecrement();else if (onIncrement && reverse) onIncrement();\n        }\n        break;\n      case 'Right':\n      case 'ArrowRight':\n        if (orientation === 'horizontal') {\n          e.preventDefault();\n          if (onIncrement && !reverse) onIncrement();else if (onDecrement && reverse) onDecrement();\n        }\n        break;\n      case 'Down':\n      case 'ArrowDown':\n        if (orientation === 'vertical') {\n          e.preventDefault();\n          if (onIncrement && !reverse) onIncrement();else if (onDecrement && reverse) onDecrement();\n        }\n        break;\n      case 'Home':\n        e.preventDefault();\n        if (onDecrementToMin) onDecrementToMin();\n        break;\n      case 'End':\n        e.preventDefault();\n        if (onIncrementToMax) onIncrementToMax();\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (onCollapseToggle) onCollapseToggle();\n        break;\n    }\n  };\n  return {\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseOut: onMouseOut,\n    onKeyDown: onKeyDown\n  };\n}\nexport { $9cc09df9fd7676be$export$7bbed75feba39706 as useDrag1D };","map":{"version":3,"sources":["packages/@react-aria/utils/src/useDrag1D.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n /* eslint-disable rulesdir/pure-render */\n\nimport {getOffset} from './getOffset';\nimport {Orientation} from '@react-types/shared';\nimport React, {HTMLAttributes, MutableRefObject, useRef} from 'react';\n\ninterface UseDrag1DProps {\n  containerRef: MutableRefObject<HTMLElement>,\n  reverse?: boolean,\n  orientation?: Orientation,\n  onHover?: (hovered: boolean) => void,\n  onDrag?: (dragging: boolean) => void,\n  onPositionChange?: (position: number) => void,\n  onIncrement?: () => void,\n  onDecrement?: () => void,\n  onIncrementToMax?: () => void,\n  onDecrementToMin?: () => void,\n  onCollapseToggle?: () => void\n}\n\n// Keep track of elements that we are currently handling dragging for via useDrag1D.\n// If there's an ancestor and a descendant both using useDrag1D(), and the user starts\n// dragging the descendant, we don't want useDrag1D events to fire for the ancestor.\nconst draggingElements: HTMLElement[] = [];\n\n// created for splitview, this should be reusable for things like sliders/dials\n// It also handles keyboard events on the target allowing for increment/decrement by a given stepsize as well as minifying/maximizing and toggling between minified and previous size\n// It can also take a 'reverse' param to say if we should measure from the right/bottom instead of the top/left\n// It can also handle either a vertical or horizontal movement, but not both at the same time\n\nexport function useDrag1D(props: UseDrag1DProps): HTMLAttributes<HTMLElement> {\n  console.warn('useDrag1D is deprecated, please use `useMove` instead https://react-spectrum.adobe.com/react-aria/useMove.html');\n  let {containerRef, reverse, orientation, onHover, onDrag, onPositionChange, onIncrement, onDecrement, onIncrementToMax, onDecrementToMin, onCollapseToggle} = props;\n  let getPosition = (e) => orientation === 'horizontal' ? e.clientX : e.clientY;\n  let getNextOffset = (e: MouseEvent) => {\n    let containerOffset = getOffset(containerRef.current, reverse, orientation);\n    let mouseOffset = getPosition(e);\n    let nextOffset = reverse ? containerOffset - mouseOffset : mouseOffset - containerOffset;\n    return nextOffset;\n  };\n  let dragging = useRef(false);\n  let prevPosition = useRef(0);\n\n  // Keep track of the current handlers in a ref so that the events can access them.\n  let handlers = useRef({onPositionChange, onDrag});\n  handlers.current.onDrag = onDrag;\n  handlers.current.onPositionChange = onPositionChange;\n\n  let onMouseDragged = (e: MouseEvent) => {\n    e.preventDefault();\n    let nextOffset = getNextOffset(e);\n    if (!dragging.current) {\n      dragging.current = true;\n      if (handlers.current.onDrag) {\n        handlers.current.onDrag(true);\n      }\n      if (handlers.current.onPositionChange) {\n        handlers.current.onPositionChange(nextOffset);\n      }\n    }\n    if (prevPosition.current === nextOffset) {\n      return;\n    }\n    prevPosition.current = nextOffset;\n    if (onPositionChange) {\n      onPositionChange(nextOffset);\n    }\n  };\n\n  let onMouseUp = (e: MouseEvent) => {\n    const target = e.target as HTMLElement;\n    dragging.current = false;\n    let nextOffset = getNextOffset(e);\n    if (handlers.current.onDrag) {\n      handlers.current.onDrag(false);\n    }\n    if (handlers.current.onPositionChange) {\n      handlers.current.onPositionChange(nextOffset);\n    }\n\n    draggingElements.splice(draggingElements.indexOf(target), 1);\n    window.removeEventListener('mouseup', onMouseUp, false);\n    window.removeEventListener('mousemove', onMouseDragged, false);\n  };\n\n  let onMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    const target = e.currentTarget;\n    // If we're already handling dragging on a descendant with useDrag1D, then\n    // we don't want to handle the drag motion on this target as well.\n    if (draggingElements.some(elt => target.contains(elt))) {\n      return;\n    }\n    draggingElements.push(target);\n    window.addEventListener('mousemove', onMouseDragged, false);\n    window.addEventListener('mouseup', onMouseUp, false);\n  };\n\n  let onMouseEnter = () => {\n    if (onHover) {\n      onHover(true);\n    }\n  };\n\n  let onMouseOut = () => {\n    if (onHover) {\n      onHover(false);\n    }\n  };\n\n  let onKeyDown = (e) => {\n    switch (e.key) {\n      case 'Left':\n      case 'ArrowLeft':\n        if (orientation === 'horizontal') {\n          e.preventDefault();\n          if (onDecrement && !reverse) {\n            onDecrement();\n          } else if (onIncrement && reverse) {\n            onIncrement();\n          }\n        }\n        break;\n      case 'Up':\n      case 'ArrowUp':\n        if (orientation === 'vertical') {\n          e.preventDefault();\n          if (onDecrement && !reverse) {\n            onDecrement();\n          } else if (onIncrement && reverse) {\n            onIncrement();\n          }\n        }\n        break;\n      case 'Right':\n      case 'ArrowRight':\n        if (orientation === 'horizontal') {\n          e.preventDefault();\n          if (onIncrement && !reverse) {\n            onIncrement();\n          } else if (onDecrement && reverse) {\n            onDecrement();\n          }\n        }\n        break;\n      case 'Down':\n      case 'ArrowDown':\n        if (orientation === 'vertical') {\n          e.preventDefault();\n          if (onIncrement && !reverse) {\n            onIncrement();\n          } else if (onDecrement && reverse) {\n            onDecrement();\n          }\n        }\n        break;\n      case 'Home':\n        e.preventDefault();\n        if (onDecrementToMin) {\n          onDecrementToMin();\n        }\n        break;\n      case 'End':\n        e.preventDefault();\n        if (onIncrementToMax) {\n          onIncrementToMax();\n        }\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (onCollapseToggle) {\n          onCollapseToggle();\n        }\n        break;\n    }\n  };\n\n  return {onMouseDown, onMouseEnter, onMouseOut, onKeyDown};\n}\n"]},"metadata":{},"sourceType":"module"}