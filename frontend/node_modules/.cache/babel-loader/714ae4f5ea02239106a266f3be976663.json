{"ast":null,"code":"import { usePress as $f6c31cce2adf654f$export$45712eceda6fad21 } from \"./usePress.module.js\";\nimport { useFocusable as $f645667febf57a63$export$4c014de7c8940b4c } from \"./useFocusable.module.js\";\nimport { useObjectRef as $hhDyF$useObjectRef, getOwnerWindow as $hhDyF$getOwnerWindow, isFocusable as $hhDyF$isFocusable, mergeProps as $hhDyF$mergeProps, mergeRefs as $hhDyF$mergeRefs } from \"@react-aria/utils\";\nimport $hhDyF$react, { useEffect as $hhDyF$useEffect } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $3b117e43dc0ca95d$export$27c701ed9e449e99 = /*#__PURE__*/(0, $hhDyF$react).forwardRef(({\n  children: children,\n  ...props\n}, ref) => {\n  ref = (0, $hhDyF$useObjectRef)(ref);\n  let {\n    pressProps: pressProps\n  } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({\n    ...props,\n    ref: ref\n  });\n  let {\n    focusableProps: focusableProps\n  } = (0, $f645667febf57a63$export$4c014de7c8940b4c)(props, ref);\n  let child = (0, $hhDyF$react).Children.only(children);\n  (0, $hhDyF$useEffect)(() => {\n    if (process.env.NODE_ENV === 'production') return;\n    let el = ref.current;\n    if (!el || !(el instanceof (0, $hhDyF$getOwnerWindow)(el).Element)) {\n      console.error('<Pressable> child must forward its ref to a DOM element.');\n      return;\n    }\n    if (!(0, $hhDyF$isFocusable)(el)) {\n      console.warn('<Pressable> child must be focusable. Please ensure the tabIndex prop is passed through.');\n      return;\n    }\n    if (el.localName !== 'button' && el.localName !== 'input' && el.localName !== 'select' && el.localName !== 'textarea' && el.localName !== 'a' && el.localName !== 'area' && el.localName !== 'summary') {\n      let role = el.getAttribute('role');\n      if (!role) console.warn('<Pressable> child must have an interactive ARIA role.');else if (\n      // https://w3c.github.io/aria/#widget_roles\n      role !== 'application' && role !== 'button' && role !== 'checkbox' && role !== 'combobox' && role !== 'gridcell' && role !== 'link' && role !== 'menuitem' && role !== 'menuitemcheckbox' && role !== 'menuitemradio' && role !== 'option' && role !== 'radio' && role !== 'searchbox' && role !== 'separator' && role !== 'slider' && role !== 'spinbutton' && role !== 'switch' && role !== 'tab' && role !== 'textbox' && role !== 'treeitem') console.warn(`<Pressable> child must have an interactive ARIA role. Got \"${role}\".`);\n    }\n  }, [ref]);\n  // @ts-ignore\n  let childRef = parseInt((0, $hhDyF$react).version, 10) < 19 ? child.ref : child.props.ref;\n  return /*#__PURE__*/(0, $hhDyF$react).cloneElement(child, {\n    ...(0, $hhDyF$mergeProps)(pressProps, focusableProps, child.props),\n    // @ts-ignore\n    ref: (0, $hhDyF$mergeRefs)(childRef, ref)\n  });\n});\nexport { $3b117e43dc0ca95d$export$27c701ed9e449e99 as Pressable };","map":{"version":3,"sources":["packages/@react-aria/interactions/src/Pressable.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getOwnerWindow, isFocusable, mergeProps, mergeRefs, useObjectRef} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {ForwardedRef, ReactElement, useEffect} from 'react';\nimport {useFocusable} from './useFocusable';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<DOMAttributes, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: ForwardedRef<FocusableElement>) => {\n  ref = useObjectRef(ref);\n  let {pressProps} = usePress({...props, ref});\n  let {focusableProps} = useFocusable(props, ref);\n  let child = React.Children.only(children);\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n    \n    let el = ref.current;\n    if (!el || !(el instanceof getOwnerWindow(el).Element)) {\n      console.error('<Pressable> child must forward its ref to a DOM element.');\n      return;\n    }\n\n    if (!isFocusable(el)) {\n      console.warn('<Pressable> child must be focusable. Please ensure the tabIndex prop is passed through.');\n      return;\n    }\n\n    if (\n      el.localName !== 'button' &&\n      el.localName !== 'input' &&\n      el.localName !== 'select' &&\n      el.localName !== 'textarea' &&\n      el.localName !== 'a' &&\n      el.localName !== 'area' &&\n      el.localName !== 'summary'\n    ) {\n      let role = el.getAttribute('role');\n      if (!role) {\n        console.warn('<Pressable> child must have an interactive ARIA role.');\n      } else if (\n        // https://w3c.github.io/aria/#widget_roles\n        role !== 'application' &&\n        role !== 'button' &&\n        role !== 'checkbox' &&\n        role !== 'combobox' &&\n        role !== 'gridcell' &&\n        role !== 'link' &&\n        role !== 'menuitem' &&\n        role !== 'menuitemcheckbox' &&\n        role !== 'menuitemradio' &&\n        role !== 'option' &&\n        role !== 'radio' &&\n        role !== 'searchbox' &&\n        role !== 'separator' &&\n        role !== 'slider' &&\n        role !== 'spinbutton' &&\n        role !== 'switch' &&\n        role !== 'tab' &&\n        role !== 'textbox' &&\n        role !== 'treeitem'\n      ) {\n        console.warn(`<Pressable> child must have an interactive ARIA role. Got \"${role}\".`);\n      }\n    }\n  }, [ref]);\n\n  // @ts-ignore\n  let childRef = parseInt(React.version, 10) < 19 ? child.ref : child.props.ref;\n\n  return React.cloneElement(\n    child,\n    {\n      ...mergeProps(pressProps, focusableProps, child.props),\n      // @ts-ignore\n      ref: mergeRefs(childRef, ref)\n    }\n  );\n});\n"]},"metadata":{},"sourceType":"module"}