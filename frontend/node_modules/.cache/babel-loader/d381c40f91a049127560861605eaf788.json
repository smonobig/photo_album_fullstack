{"ast":null,"code":"import { version as $iulvE$version } from \"react\";\nfunction $cdc5a6778b766db2$export$a9d04c5684123369(value) {\n  const pieces = (0, $iulvE$version).split('.');\n  const major = parseInt(pieces[0], 10);\n  if (major >= 19) return value;\n  // compatibility with React < 19\n  return value ? 'true' : undefined;\n}\nexport { $cdc5a6778b766db2$export$a9d04c5684123369 as inertValue };","map":{"version":3,"sources":["packages/@react-aria/utils/src/inertValue.ts"],"names":[],"mappings":";AAEO,SAAS,yCAAA,CAAW,KAAe,EAAA;EACxC,MAAM,MAAA,GAAS,CAAA,CAAA,EAAA,cAAM,EAAE,KAAK,CAAC,GAAA,CAAA;EAC7B,MAAM,KAAA,GAAQ,QAAA,CAAS,MAAM,CAAC,CAAA,CAAE,EAAE,EAAA,CAAA;EAClC,IAAI,KAAA,IAAS,EAAA,EACX,OAAO,KAAA;EAET;EACA,OAAO,KAAA,GAAQ,MAAA,GAAS,SAAA;AAC1B","sourcesContent":["import {version} from 'react';\n\nexport function inertValue(value?: boolean): string | boolean | undefined {\n  const pieces = version.split('.');\n  const major = parseInt(pieces[0], 10);\n  if (major >= 19) {\n    return value;\n  }\n  // compatibility with React < 19\n  return value ? 'true' : undefined;\n}\n"]},"metadata":{},"sourceType":"module"}