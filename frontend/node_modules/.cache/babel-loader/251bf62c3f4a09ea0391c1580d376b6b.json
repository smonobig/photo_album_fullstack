{"ast":null,"code":"/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */function $93925083ecbb358c$export$48d1ea6320830260(handler) {\n  if (!handler) return undefined;\n  let shouldStopPropagation = true;\n  return e => {\n    let event = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        if (shouldStopPropagation && process.env.NODE_ENV !== 'production') console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');else shouldStopPropagation = true;\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      },\n      isPropagationStopped() {\n        return shouldStopPropagation;\n      }\n    };\n    handler(event);\n    if (shouldStopPropagation) e.stopPropagation();\n  };\n}\nexport { $93925083ecbb358c$export$48d1ea6320830260 as createEventHandler };","map":{"version":3,"sources":["packages/@react-aria/interactions/src/createEventHandler.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;AAUC,GAQM,SAAS,yCAAA,CAA6C,OAAmC,EAAA;EAC9F,IAAI,CAAC,OAAA,EACH,OAAO,SAAA;EAGT,IAAI,qBAAA,GAAwB,IAAA;EAC5B,OAAQ,CAAA,IAAA;IACN,IAAI,KAAA,GAAsB;MACxB,GAAG,CAAC;MACJ,cAAA,CAAA,EAAA;QACE,CAAA,CAAE,cAAc,CAAA,CAAA;MAClB,CAAA;MACA,kBAAA,CAAA,EAAA;QACE,OAAO,CAAA,CAAE,kBAAkB,CAAA,CAAA;MAC7B,CAAA;MACA,eAAA,CAAA,EAAA;QACE,IAAI,qBAAA,IAAyB,OAAA,CAAQ,GAAG,CAAC,QAAQ,KAAK,YAAA,EACpD,OAAA,CAAQ,KAAK,CAAC,sIAAA,CAAA,CAAA,KAEd,qBAAA,GAAwB,IAAA;MAE5B,CAAA;MACA,mBAAA,CAAA,EAAA;QACE,qBAAA,GAAwB,KAAA;MAC1B,CAAA;MACA,oBAAA,CAAA,EAAA;QACE,OAAO,qBAAA;MACT;IACF,CAAA;IAEA,OAAA,CAAQ,KAAA,CAAA;IAER,IAAI,qBAAA,EACF,CAAA,CAAE,eAAe,CAAA,CAAA;EAErB,CAAA;AACF","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler?: (e: BaseEvent<T>) => void): ((e: T) => void) | undefined {\n  if (!handler) {\n    return undefined;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        if (shouldStopPropagation && process.env.NODE_ENV !== 'production') {\n          console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n        } else {\n          shouldStopPropagation = true;\n        }\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      },\n      isPropagationStopped() {\n        return shouldStopPropagation;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}