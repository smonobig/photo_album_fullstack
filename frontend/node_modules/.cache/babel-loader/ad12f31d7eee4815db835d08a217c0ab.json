{"ast":null,"code":"import { useLayoutEffect as $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c } from \"./useLayoutEffect.module.js\";\nimport { useState as $hQ5Hp$useState } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet $ef06256079686ba0$var$descriptionId = 0;\nconst $ef06256079686ba0$var$descriptionNodes = new Map();\nfunction $ef06256079686ba0$export$f8aeda7b10753fa1(description) {\n  let [id, setId] = (0, $hQ5Hp$useState)();\n  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {\n    if (!description) return;\n    let desc = $ef06256079686ba0$var$descriptionNodes.get(description);\n    if (!desc) {\n      let id = `react-aria-description-${$ef06256079686ba0$var$descriptionId++}`;\n      setId(id);\n      let node = document.createElement('div');\n      node.id = id;\n      node.style.display = 'none';\n      node.textContent = description;\n      document.body.appendChild(node);\n      desc = {\n        refCount: 0,\n        element: node\n      };\n      $ef06256079686ba0$var$descriptionNodes.set(description, desc);\n    } else setId(desc.element.id);\n    desc.refCount++;\n    return () => {\n      if (desc && --desc.refCount === 0) {\n        desc.element.remove();\n        $ef06256079686ba0$var$descriptionNodes.delete(description);\n      }\n    };\n  }, [description]);\n  return {\n    'aria-describedby': description ? id : undefined\n  };\n}\nexport { $ef06256079686ba0$export$f8aeda7b10753fa1 as useDescription };","map":{"version":3,"sources":["packages/@react-aria/utils/src/useDescription.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;AAUC;;AAMD,IAAI,mCAAA,GAAgB,CAAA;AACpB,MAAM,sCAAA,GAAmB,IAAI,GAAA,CAAA,CAAA;AAEtB,SAAS,yCAAA,CAAe,WAAoB,EAAA;EACjD,IAAI,CAAC,EAAA,EAAI,KAAA,CAAM,GAAG,CAAA,CAAA,EAAA,eAAO,EAAA,CAAA;EAEzB,CAAA,CAAA,EAAA,yCAAc,EAAE,MAAA;IACd,IAAI,CAAC,WAAA,EACH;IAGF,IAAI,IAAA,GAAO,sCAAA,CAAiB,GAAG,CAAC,WAAA,CAAA;IAChC,IAAI,CAAC,IAAA,EAAM;MACT,IAAI,EAAA,GAAK,0BAA0B,mCAAA,EAAA,EAAiB;MACpD,KAAA,CAAM,EAAA,CAAA;MAEN,IAAI,IAAA,GAAO,QAAA,CAAS,aAAa,CAAC,KAAA,CAAA;MAClC,IAAA,CAAK,EAAE,GAAG,EAAA;MACV,IAAA,CAAK,KAAK,CAAC,OAAO,GAAG,MAAA;MACrB,IAAA,CAAK,WAAW,GAAG,WAAA;MACnB,QAAA,CAAS,IAAI,CAAC,WAAW,CAAC,IAAA,CAAA;MAC1B,IAAA,GAAO;QAAC,QAAA,EAAU,CAAA;QAAG,OAAA,EAAS;MAAI,CAAA;MAClC,sCAAA,CAAiB,GAAG,CAAC,WAAA,EAAa,IAAA,CAAA;IACpC,CAAA,MACE,KAAA,CAAM,IAAA,CAAK,OAAO,CAAC,EAAE,CAAA;IAGvB,IAAA,CAAK,QAAQ,EAAA;IACb,OAAO,MAAA;MACL,IAAI,IAAA,IAAQ,EAAE,IAAA,CAAK,QAAQ,KAAK,CAAA,EAAG;QACjC,IAAA,CAAK,OAAO,CAAC,MAAM,CAAA,CAAA;QACnB,sCAAA,CAAiB,MAAM,CAAC,WAAA,CAAA;MAC1B;IACF,CAAA;EACF,CAAA,EAAG,CAAC,WAAA,CAAY,CAAA;EAEhB,OAAO;IACL,kBAAA,EAAoB,WAAA,GAAc,EAAA,GAAK;EACzC,CAAA;AACF","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\nimport {useLayoutEffect} from './useLayoutEffect';\nimport {useState} from 'react';\n\nlet descriptionId = 0;\nconst descriptionNodes = new Map<string, {refCount: number, element: Element}>();\n\nexport function useDescription(description?: string): AriaLabelingProps {\n  let [id, setId] = useState<string | undefined>();\n\n  useLayoutEffect(() => {\n    if (!description) {\n      return;\n    }\n\n    let desc = descriptionNodes.get(description);\n    if (!desc) {\n      let id = `react-aria-description-${descriptionId++}`;\n      setId(id);\n\n      let node = document.createElement('div');\n      node.id = id;\n      node.style.display = 'none';\n      node.textContent = description;\n      document.body.appendChild(node);\n      desc = {refCount: 0, element: node};\n      descriptionNodes.set(description, desc);\n    } else {\n      setId(desc.element.id);\n    }\n\n    desc.refCount++;\n    return () => {\n      if (desc && --desc.refCount === 0) {\n        desc.element.remove();\n        descriptionNodes.delete(description);\n      }\n    };\n  }, [description]);\n\n  return {\n    'aria-describedby': description ? id : undefined\n  };\n}\n"]},"metadata":{},"sourceType":"module"}