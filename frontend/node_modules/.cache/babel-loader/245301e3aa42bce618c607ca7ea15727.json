{"ast":null,"code":"import { PressResponderContext as $ae1eeba8b9eafd08$export$5165eccb35aaadb5 } from \"./context.module.js\";\nimport { useObjectRef as $87RPk$useObjectRef, mergeProps as $87RPk$mergeProps, useSyncRef as $87RPk$useSyncRef } from \"@react-aria/utils\";\nimport $87RPk$react, { useRef as $87RPk$useRef, useContext as $87RPk$useContext, useEffect as $87RPk$useEffect, useMemo as $87RPk$useMemo } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $f1ab8c75478c6f73$export$3351871ee4b288b8 = /*#__PURE__*/(0, $87RPk$react).forwardRef(({\n  children: children,\n  ...props\n}, ref) => {\n  let isRegistered = (0, $87RPk$useRef)(false);\n  let prevContext = (0, $87RPk$useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));\n  ref = (0, $87RPk$useObjectRef)(ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref));\n  let context = (0, $87RPk$mergeProps)(prevContext || {}, {\n    ...props,\n    ref: ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) prevContext.register();\n    }\n  });\n  (0, $87RPk$useSyncRef)(prevContext, ref);\n  (0, $87RPk$useEffect)(() => {\n    if (!isRegistered.current) {\n      if (process.env.NODE_ENV !== 'production') console.warn(\"A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.\");\n      isRegistered.current = true; // only warn once in strict mode.\n    }\n  }, []);\n  return /*#__PURE__*/(0, $87RPk$react).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {\n    value: context\n  }, children);\n});\nfunction $f1ab8c75478c6f73$export$cf75428e0b9ed1ea({\n  children: children\n}) {\n  let context = (0, $87RPk$useMemo)(() => ({\n    register: () => {}\n  }), []);\n  return /*#__PURE__*/(0, $87RPk$react).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {\n    value: context\n  }, children);\n}\nexport { $f1ab8c75478c6f73$export$3351871ee4b288b8 as PressResponder, $f1ab8c75478c6f73$export$cf75428e0b9ed1ea as ClearPressResponder };","map":{"version":3,"sources":["packages/@react-aria/interactions/src/PressResponder.tsx"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;AAUC;;AAYM,MAAM,yCAAA,GAAA,aAAiB,CAAA,CAAA,EAAA,YAAI,EAAE,UAAU,CAAC,CAAC;EAAA,QAAA,EAAC,QAAQ;EAAE,GAAG;AAAA,CAA2B,EAAE,GAAA,KAAA;EACzF,IAAI,YAAA,GAAe,CAAA,CAAA,EAAA,aAAK,EAAE,KAAA,CAAA;EAC1B,IAAI,WAAA,GAAc,CAAA,CAAA,EAAA,iBAAS,GAAE,CAAA,EAAA,yCAAoB,CAAA,CAAA;EACjD,GAAA,GAAM,CAAA,CAAA,EAAA,mBAAW,EAAE,GAAA,KAAO,WAAA,KAAA,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,WAAA,CAAa,GAAG,CAAA,CAAA;EAC1C,IAAI,OAAA,GAAU,CAAA,CAAA,EAAA,iBAAS,EAAE,WAAA,IAAe,CAAC,CAAA,EAAG;IAC1C,GAAG,KAAK;SACR,GAAA;IACA,QAAA,CAAA,EAAA;MACE,YAAA,CAAa,OAAO,GAAG,IAAA;MACvB,IAAI,WAAA,EACF,WAAA,CAAY,QAAQ,CAAA,CAAA;IAExB;EACF,CAAA,CAAA;EAEA,CAAA,CAAA,EAAA,iBAAS,EAAE,WAAA,EAAa,GAAA,CAAA;EAExB,CAAA,CAAA,EAAA,gBAAQ,EAAE,MAAA;IACR,IAAI,CAAC,YAAA,CAAa,OAAO,EAAE;MACzB,IAAI,OAAA,CAAQ,GAAG,CAAC,QAAQ,KAAK,YAAA,EAC3B,OAAA,CAAQ,IAAI,CACV,2IAAA,CAAA;MAIJ,YAAA,CAAa,OAAO,GAAG,IAAA,CAAA,CAAM;IAC/B;EACF,CAAA,EAAG,EAAE,CAAA;EAEL,OAAA,aACE,CAAA,CAAA,EAAA,YAAA,EAAA,aAAA,CAAC,CAAA,CAAA,EAAA,yCAAoB,EAAE,QAAQ,EAAA;IAAC,KAAA,EAAO;KACpC,QAAA,CAAA;AAGP,CAAA,CAAA;AAEO,SAAS,yCAAA,CAAoB;EAAA,QAAA,EAAC;AAAQ,CAAwB,EAAA;EACnE,IAAI,OAAA,GAAU,CAAA,CAAA,EAAA,cAAM,EAAE,OAAO;IAAC,QAAA,EAAU,CAAA,KAAA,CAAO;EAAC,CAAA,CAAA,EAAI,EAAE,CAAA;EACtD,OAAA,aACE,CAAA,CAAA,EAAA,YAAA,EAAA,aAAA,CAAC,CAAA,CAAA,EAAA,yCAAoB,EAAE,QAAQ,EAAA;IAAC,KAAA,EAAO;KACpC,QAAA,CAAA;AAGP","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {mergeProps, useObjectRef, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ForwardedRef, ReactNode, useContext, useEffect, useMemo, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: ForwardedRef<FocusableElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  ref = useObjectRef(ref || prevContext?.ref);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          'A PressResponder was rendered without a pressable child. ' +\n          'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n        );\n      }\n      isRegistered.current = true; // only warn once in strict mode.\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n\nexport function ClearPressResponder({children}: {children: ReactNode}): ReactNode {\n  let context = useMemo(() => ({register: () => {}}), []);\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}