{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smonoboss\\\\PythonProject5\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Slider from 'react-slick';\nimport './App.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [albums, setAlbums] = useState({});\n  const [status, setStatus] = useState('Выберите фотографии');\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    fetchAlbums();\n  }, []);\n  const fetchAlbums = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/albums');\n      if (!response.ok) throw new Error('Ошибка загрузки альбомов');\n      const data = await response.json();\n      setAlbums(data);\n    } catch (error) {\n      setStatus('Ошибка загрузки альбомов');\n    }\n  };\n  const handleUpload = async event => {\n    event.preventDefault();\n    const files = fileInputRef.current.files;\n    if (!files || files.length === 0) {\n      setStatus('Файлы не выбраны');\n      return;\n    }\n    const formData = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      formData.append('file', files[i]); // Ключ 'file' должен совпадать с бэкендом\n    }\n    setStatus(`Загрузка ${files.length} фото...`);\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n        // Не указываем Content-Type вручную!\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      const result = await response.json();\n      await fetchAlbums();\n      setStatus('Фотографии успешно загружены!');\n      fileInputRef.current.value = ''; // Сбрасываем input\n    } catch (error) {\n      setStatus(`Ошибка загрузки: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"upload-form\",\n      onSubmit: handleUpload,\n      encType: \"multipart/form-data\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        multiple: true,\n        ref: fileInputRef,\n        onChange: e => setStatus(`${e.target.files.length} выбрано`),\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"a233OAYhmdtnls7NLYD/JSQZwpo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Slider","jsxDEV","_jsxDEV","App","_s","albums","setAlbums","status","setStatus","fileInputRef","fetchAlbums","response","fetch","ok","Error","data","json","error","handleUpload","event","preventDefault","files","current","length","formData","FormData","i","append","method","body","errorText","text","result","value","message","className","children","onSubmit","encType","type","name","multiple","ref","onChange","e","target","hidden","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/smonoboss/PythonProject5/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport './App.css';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nfunction App() {\r\n    const [albums, setAlbums] = useState({});\r\n    const [status, setStatus] = useState('Выберите фотографии');\r\n    const fileInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        fetchAlbums();\r\n    }, []);\r\n\r\n    const fetchAlbums = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/albums');\r\n            if (!response.ok) throw new Error('Ошибка загрузки альбомов');\r\n            const data = await response.json();\r\n            setAlbums(data);\r\n        } catch (error) {\r\n            setStatus('Ошибка загрузки альбомов');\r\n        }\r\n    };\r\n\r\n    const handleUpload = async (event) => {\r\n        event.preventDefault();\r\n        const files = fileInputRef.current.files;\r\n\r\n        if (!files || files.length === 0) {\r\n            setStatus('Файлы не выбраны');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('file', files[i]);  // Ключ 'file' должен совпадать с бэкендом\r\n        }\r\n\r\n        setStatus(`Загрузка ${files.length} фото...`);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/upload', {\r\n                method: 'POST',\r\n                body: formData,\r\n                // Не указываем Content-Type вручную!\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                throw new Error(errorText);\r\n            }\r\n\r\n            const result = await response.json();\r\n            await fetchAlbums();\r\n            setStatus('Фотографии успешно загружены!');\r\n            fileInputRef.current.value = '';  // Сбрасываем input\r\n        } catch (error) {\r\n            setStatus(`Ошибка загрузки: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            {/* ... (остальной JSX остается без изменений) */}\r\n            <form\r\n                className=\"upload-form\"\r\n                onSubmit={handleUpload}\r\n                encType=\"multipart/form-data\"\r\n            >\r\n                <input\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    multiple\r\n                    ref={fileInputRef}\r\n                    onChange={(e) => setStatus(`${e.target.files.length} выбрано`)}\r\n                    hidden\r\n                />\r\n                {/* ... (остальная разметка) */}\r\n            </form>\r\n            {/* ... */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}